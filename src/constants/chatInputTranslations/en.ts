const translations = {
      loadFile: 'Add file',
      loadUrl: 'Add URL',
      loadFileFromUrl: 'Load file URL',
      voiceInput: 'Voice input',
      fileDialog: 'Add file to prompt',
      urlDialog: 'Add URL to prompt',
      loadFileUrlDialog: 'Load file from URL to chat',
      filePath: 'File path',
      urlPath: 'Site URL',
      fileUrlPath: 'File URL',
      add: 'Add',
      load: 'Load',
      cancel: 'Cancel',
      browse: 'Browse...',
      fileDescription: 'Enter the complete file path or browse your computer to add it to the prompt.',
      urlDescription: 'Enter the complete URL of the website to add to the prompt.',
      loadFileUrlDescription: 'Enter the direct URL of a file to load its content into the chat.',
      filePathPlaceholder: 'C:\\Documents\\myFile.txt or /home/user/document.md',
      urlPlaceholder: 'https://example.com or https://docs.example.com/api',
      fileUrlPlaceholder: 'https://example.com/document.txt',
      loading: 'Adding...',
      loadingFile: 'Loading file...',
      fileAdded: 'File added to prompt',
      urlAdded: 'URL added to prompt',
      fileLoadedToChat: 'File loaded to chat',
      fileError: 'Error adding file',
      urlError: 'Error adding URL',
      loadFileError: 'Error loading file',
      invalidUrl: 'Invalid URL',
      networkError: 'Network error',
      fileNotFound: 'File not found',
      unsupportedFormat: 'Unsupported file format',
      send: 'Send',
      addToPrompt: 'Add to prompt',
      supportedFormats: 'Supported formats',
      preview: 'Preview',
      examples: 'Valid URL examples',
      directLink: 'Direct file link',
      rawContent: 'Raw content (GitHub, etc.)',
      publicFile: 'Public file',
      // Audio playback
      enableAudioPlayback: 'Enable audio playback',
      disableAudioPlayback: 'Disable audio playback',
      speechSynthesisNotSupported: 'Audio playback is not supported in this browser',
      contentAnalyzerNotice: 'Important: only the ‚ÄúContent Analyzer‚Äù assistant inserts the full document into the conversation. Other assistants will reassess it each time you ask a new question.',
      // Speech recognition
      startListening: 'Start listening',
      stopListening: 'Stop listening',
      listening: 'Listening...',
      speechNotSupported: 'Speech recognition not supported in this browser',
      microphonePermissionDenied: 'Microphone permission denied',
      speechRecognitionError: 'Speech recognition error',
      speechStarted: 'Voice listening started',
      speechStopped: 'Voice listening stopped',
      transcribing: 'Transcribing...',
      speakNow: 'Speak now',
      clickToStartSpeaking: 'Click to start speaking',
      noSpeechDetected: 'No speech detected',
      speechTimeout: 'Listening timeout',
      browserNotSupported: 'Your browser does not support speech recognition',
      checkingPermissions: 'Checking permissions...',
      requestPermission: 'Request permission',
      permissionGranted: 'Permission granted',
      permissionDenied: 'Permission denied',
      microphoneAccessRequired: 'Microphone access required',
      // Permission dialog
      permissionTitle: 'Microphone permission required',
      permissionDescription: 'To use voice input, we need access to your microphone.',
      permissionInstructions: 'Instructions to allow microphone',
      permissionStep1: '1. Click the üîí or üõ°Ô∏è icon in the address bar',
      permissionStep2: '2. Select "Allow" for microphone',
      permissionStep3: '3. Reload the page if necessary',
      permissionChrome: 'In Chrome / Edge',
      permissionFirefox: 'In Firefox',
      permissionSafari: 'In Safari',
      permissionGeneric: 'General instructions',
      tryAgain: 'Try again',
      openSettings: 'Open settings',
      permissionBlocked: 'Microphone access has been blocked',
      permissionBlockedHelp: 'You need to allow microphone access in your browser settings.',
      httpsRequired: 'HTTPS required',
      httpsRequiredDesc: 'Speech recognition requires a secure connection (HTTPS).'
    }

export type ChatInputTranslation = typeof translations;

export default translations;
